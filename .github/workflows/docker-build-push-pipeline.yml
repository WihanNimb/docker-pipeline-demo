name: Docker Build and Push pipeline

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main # Optionally, run on pull requests to main for validation

env:
  DOCKER_IMAGE_NAME: bookstore-api # Name of your Docker image
  DOCKER_REGISTRY: docker.io # Docker Hub registry

jobs:
  build_and_push:
    runs-on: ubuntu-latest # Use a fresh Ubuntu runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Action to check out your repository code

      - name: Log in to Docker Hub
        uses: docker/login-action@v3 # Action to log in to Docker Hub
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # Use the secret for username
          password: ${{ secrets.DOCKER_PASSWORD }} # Use the secret for PAT

      - name: Extract metadata (tags) for Docker
        id: meta
        uses: docker/metadata-action@v5 # Action to generate Docker image tags
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }} # Example: docker.io/your_docker_username/bookstore-api
          tags: |
            type=ref,event=branch # Tag with branch name (e.g., main)
            type=sha,format=long,prefix= # Tag with full commit SHA
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }} # Tag 'latest' only on main branch

      - name: Build and push Docker image
        uses: docker/build-push-action@v6 # Action to build and push Docker image
        with:
          context: . # Build context is the current directory
          push: true # Push the image to the registry
          tags: ${{ steps.meta.outputs.tags }} # Use generated tags
          labels: ${{ steps.meta.outputs.labels }} # Use generated labels
          cache-from: type=gha # Cache layers to speed up builds
          cache-to: type=gha,mode=max # Cache layers for future builds